// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id        String   @id @default(uuid())
  username  String
  email     String   @unique
  password  String
  role      Role     @default(user)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  reservations Reservation[] // Relasi ke tabel Reservation
}

enum Role {
  admin
  user
}

model Service {
  id          String   @id @default(uuid())
  name        String
  description String
  price       Float
  capacity    Int // Kapasitas maksimal untuk layanan ini
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  reservations Reservation[] // Relasi ke tabel Reservation
}

model Reservation {
  id              String   @id @default(uuid())
  reservationDate DateTime // Tanggal reservasi
  reservationTime DateTime // Waktu reservasi
  numberOfPeople  Int // Jumlah orang untuk reservasi ini
  status          String   @default("pending") // Status reservasi: pending, confirmed, canceled
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt

  userId    String
  serviceId String

  user    User    @relation(fields: [userId], references: [id])
  service Service @relation(fields: [serviceId], references: [id])
}
